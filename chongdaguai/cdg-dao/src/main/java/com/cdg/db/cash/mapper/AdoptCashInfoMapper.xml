<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cdg.db.cash.dao.AdoptCashInfoMapper">
  <resultMap id="BaseResultMap" type="com.cdg.db.cash.model.AdoptCashInfo">
    <id column="cash_id" jdbcType="BIGINT" property="cashId" />
    <result column="adopt_id" jdbcType="BIGINT" property="adoptId" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="amount_state" jdbcType="TINYINT" property="amountState" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cash_id, adopt_id, amount, description, remarks, amount_state, update_time, create_time
  </sql>
  <select id="selectByExample" parameterType="com.cdg.db.cash.model.AdoptCashInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from adopt_cash_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="page != null">
      limit #{page.begin} , #{page.size}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from adopt_cash_info
    where cash_id = #{cashId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from adopt_cash_info
    where cash_id = #{cashId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.cdg.db.cash.model.AdoptCashInfoExample">
    delete from adopt_cash_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cdg.db.cash.model.AdoptCashInfo">
    <selectKey keyProperty="cashId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into adopt_cash_info (adopt_id, amount, description, 
      remarks, amount_state, update_time, 
      create_time)
    values (#{adoptId,jdbcType=BIGINT}, #{amount,jdbcType=DECIMAL}, #{description,jdbcType=VARCHAR}, 
      #{remarks,jdbcType=VARCHAR}, #{amountState,jdbcType=TINYINT}, #{updateTime,jdbcType=BIGINT}, 
      #{createTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.cdg.db.cash.model.AdoptCashInfo">
    <selectKey keyProperty="cashId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into adopt_cash_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="adoptId != null">
        adopt_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="amountState != null">
        amount_state,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="adoptId != null">
        #{adoptId,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="amountState != null">
        #{amountState,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cdg.db.cash.model.AdoptCashInfoExample" resultType="java.lang.Long">
    select count(*) from adopt_cash_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update adopt_cash_info
    <set>
      <if test="record.cashId != null">
        cash_id = #{record.cashId,jdbcType=BIGINT},
      </if>
      <if test="record.adoptId != null">
        adopt_id = #{record.adoptId,jdbcType=BIGINT},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.amountState != null">
        amount_state = #{record.amountState,jdbcType=TINYINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update adopt_cash_info
    set cash_id = #{record.cashId,jdbcType=BIGINT},
      adopt_id = #{record.adoptId,jdbcType=BIGINT},
      amount = #{record.amount,jdbcType=DECIMAL},
      description = #{record.description,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      amount_state = #{record.amountState,jdbcType=TINYINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cdg.db.cash.model.AdoptCashInfo">
    update adopt_cash_info
    <set>
      <if test="adoptId != null">
        adopt_id = #{adoptId,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="amountState != null">
        amount_state = #{amountState,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
    </set>
    where cash_id = #{cashId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cdg.db.cash.model.AdoptCashInfo">
    update adopt_cash_info
    set adopt_id = #{adoptId,jdbcType=BIGINT},
      amount = #{amount,jdbcType=DECIMAL},
      description = #{description,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      amount_state = #{amountState,jdbcType=TINYINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=BIGINT}
    where cash_id = #{cashId,jdbcType=BIGINT}
  </update>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    <foreach collection="list" index="index" item="item" separator=";">
      update adopt_cash_info
      <set>
        <if test="item.adoptId!=null">
          adopt_id=#{item.adoptId,jdbcType=BIGINT},
        </if>
        <if test="item.amount!=null">
          amount=#{item.amount,jdbcType=DECIMAL},
        </if>
        <if test="item.description!=null">
          description=#{item.description,jdbcType=VARCHAR},
        </if>
        <if test="item.remarks!=null">
          remarks=#{item.remarks,jdbcType=VARCHAR},
        </if>
        <if test="item.amountState!=null">
          amount_state=#{item.amountState,jdbcType=TINYINT},
        </if>
        <if test="item.updateTime!=null">
          update_time=#{item.updateTime,jdbcType=BIGINT},
        </if>
        <if test="item.createTime!=null">
          create_time=#{item.createTime,jdbcType=BIGINT},
        </if>
      </set>
      where 
      cash_id = #{item.cashId,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    <foreach collection="list" index="index" item="item" separator=";">
      insert into adopt_cash_info
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="item.cashId!=null">
          cash_id,
        </if>
        <if test="item.adoptId!=null">
          adopt_id,
        </if>
        <if test="item.amount!=null">
          amount,
        </if>
        <if test="item.description!=null">
          description,
        </if>
        <if test="item.remarks!=null">
          remarks,
        </if>
        <if test="item.amountState!=null">
          amount_state,
        </if>
        <if test="item.updateTime!=null">
          update_time,
        </if>
        <if test="item.createTime!=null">
          create_time,
        </if>
      </trim>
       values 
      <trim prefix=" (" suffix=")" suffixOverrides=",">
        <if test="item.cashId!=null">
          #{item.cashId,jdbcType=BIGINT},
        </if>
        <if test="item.adoptId!=null">
          #{item.adoptId,jdbcType=BIGINT},
        </if>
        <if test="item.amount!=null">
          #{item.amount,jdbcType=DECIMAL},
        </if>
        <if test="item.description!=null">
          #{item.description,jdbcType=VARCHAR},
        </if>
        <if test="item.remarks!=null">
          #{item.remarks,jdbcType=VARCHAR},
        </if>
        <if test="item.amountState!=null">
          #{item.amountState,jdbcType=TINYINT},
        </if>
        <if test="item.updateTime!=null">
          #{item.updateTime,jdbcType=BIGINT},
        </if>
        <if test="item.createTime!=null">
          #{item.createTime,jdbcType=BIGINT},
        </if>
      </trim>
    </foreach>
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
    insert into adopt_cash_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      cash_id,adopt_id,
      amount,description,
      remarks,amount_state,
      update_time,create_time,
    </trim>
     values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        #{item.cashId,jdbcType=BIGINT},#{item.adoptId,jdbcType=BIGINT},
        #{item.amount,jdbcType=DECIMAL},#{item.description,jdbcType=VARCHAR},
        #{item.remarks,jdbcType=VARCHAR},#{item.amountState,jdbcType=TINYINT},
        #{item.updateTime,jdbcType=BIGINT},#{item.createTime,jdbcType=BIGINT},
      </trim>
    </foreach>
  </insert>
</mapper>