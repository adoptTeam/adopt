<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cdg.db.user.dao.AdoptUserAddressMapper">
  <resultMap id="BaseResultMap" type="com.cdg.db.user.model.AdoptUserAddress">
    <id column="user_address_id" jdbcType="BIGINT" property="userAddressId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="consignee_name" jdbcType="VARCHAR" property="consigneeName" />
    <result column="consignee_phone" jdbcType="VARCHAR" property="consigneePhone" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="areas" jdbcType="VARCHAR" property="areas" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="address_state" jdbcType="TINYINT" property="addressState" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_address_id, user_id, consignee_name, consignee_phone, province, city, areas, 
    address, address_state, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.cdg.db.user.model.AdoptUserAddressExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from adopt_user_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="page != null">
      limit #{page.begin} , #{page.size}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from adopt_user_address
    where user_address_id = #{userAddressId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from adopt_user_address
    where user_address_id = #{userAddressId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.cdg.db.user.model.AdoptUserAddressExample">
    delete from adopt_user_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cdg.db.user.model.AdoptUserAddress">
    <selectKey keyProperty="userAddressId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into adopt_user_address (user_id, consignee_name, consignee_phone, 
      province, city, areas, 
      address, address_state, create_time, 
      update_time)
    values (#{userId,jdbcType=BIGINT}, #{consigneeName,jdbcType=VARCHAR}, #{consigneePhone,jdbcType=VARCHAR}, 
      #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{areas,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{addressState,jdbcType=TINYINT}, #{createTime,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.cdg.db.user.model.AdoptUserAddress">
    <selectKey keyProperty="userAddressId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into adopt_user_address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="consigneeName != null">
        consignee_name,
      </if>
      <if test="consigneePhone != null">
        consignee_phone,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="areas != null">
        areas,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="addressState != null">
        address_state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="consigneeName != null">
        #{consigneeName,jdbcType=VARCHAR},
      </if>
      <if test="consigneePhone != null">
        #{consigneePhone,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="areas != null">
        #{areas,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="addressState != null">
        #{addressState,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cdg.db.user.model.AdoptUserAddressExample" resultType="java.lang.Long">
    select count(*) from adopt_user_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update adopt_user_address
    <set>
      <if test="record.userAddressId != null">
        user_address_id = #{record.userAddressId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.consigneeName != null">
        consignee_name = #{record.consigneeName,jdbcType=VARCHAR},
      </if>
      <if test="record.consigneePhone != null">
        consignee_phone = #{record.consigneePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.areas != null">
        areas = #{record.areas,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.addressState != null">
        address_state = #{record.addressState,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update adopt_user_address
    set user_address_id = #{record.userAddressId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      consignee_name = #{record.consigneeName,jdbcType=VARCHAR},
      consignee_phone = #{record.consigneePhone,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      areas = #{record.areas,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      address_state = #{record.addressState,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cdg.db.user.model.AdoptUserAddress">
    update adopt_user_address
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="consigneeName != null">
        consignee_name = #{consigneeName,jdbcType=VARCHAR},
      </if>
      <if test="consigneePhone != null">
        consignee_phone = #{consigneePhone,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="areas != null">
        areas = #{areas,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="addressState != null">
        address_state = #{addressState,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
    </set>
    where user_address_id = #{userAddressId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cdg.db.user.model.AdoptUserAddress">
    update adopt_user_address
    set user_id = #{userId,jdbcType=BIGINT},
      consignee_name = #{consigneeName,jdbcType=VARCHAR},
      consignee_phone = #{consigneePhone,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      areas = #{areas,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      address_state = #{addressState,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT}
    where user_address_id = #{userAddressId,jdbcType=BIGINT}
  </update>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    <foreach collection="list" index="index" item="item" separator=";">
      update adopt_user_address
      <set>
        <if test="item.userId!=null">
          user_id=#{item.userId,jdbcType=BIGINT},
        </if>
        <if test="item.consigneeName!=null">
          consignee_name=#{item.consigneeName,jdbcType=VARCHAR},
        </if>
        <if test="item.consigneePhone!=null">
          consignee_phone=#{item.consigneePhone,jdbcType=VARCHAR},
        </if>
        <if test="item.province!=null">
          province=#{item.province,jdbcType=VARCHAR},
        </if>
        <if test="item.city!=null">
          city=#{item.city,jdbcType=VARCHAR},
        </if>
        <if test="item.areas!=null">
          areas=#{item.areas,jdbcType=VARCHAR},
        </if>
        <if test="item.address!=null">
          address=#{item.address,jdbcType=VARCHAR},
        </if>
        <if test="item.addressState!=null">
          address_state=#{item.addressState,jdbcType=TINYINT},
        </if>
        <if test="item.createTime!=null">
          create_time=#{item.createTime,jdbcType=BIGINT},
        </if>
        <if test="item.updateTime!=null">
          update_time=#{item.updateTime,jdbcType=BIGINT},
        </if>
      </set>
      where 
      user_address_id = #{item.userAddressId,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    <foreach collection="list" index="index" item="item" separator=";">
      insert into adopt_user_address
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="item.userAddressId!=null">
          user_address_id,
        </if>
        <if test="item.userId!=null">
          user_id,
        </if>
        <if test="item.consigneeName!=null">
          consignee_name,
        </if>
        <if test="item.consigneePhone!=null">
          consignee_phone,
        </if>
        <if test="item.province!=null">
          province,
        </if>
        <if test="item.city!=null">
          city,
        </if>
        <if test="item.areas!=null">
          areas,
        </if>
        <if test="item.address!=null">
          address,
        </if>
        <if test="item.addressState!=null">
          address_state,
        </if>
        <if test="item.createTime!=null">
          create_time,
        </if>
        <if test="item.updateTime!=null">
          update_time,
        </if>
      </trim>
       values 
      <trim prefix=" (" suffix=")" suffixOverrides=",">
        <if test="item.userAddressId!=null">
          #{item.userAddressId,jdbcType=BIGINT},
        </if>
        <if test="item.userId!=null">
          #{item.userId,jdbcType=BIGINT},
        </if>
        <if test="item.consigneeName!=null">
          #{item.consigneeName,jdbcType=VARCHAR},
        </if>
        <if test="item.consigneePhone!=null">
          #{item.consigneePhone,jdbcType=VARCHAR},
        </if>
        <if test="item.province!=null">
          #{item.province,jdbcType=VARCHAR},
        </if>
        <if test="item.city!=null">
          #{item.city,jdbcType=VARCHAR},
        </if>
        <if test="item.areas!=null">
          #{item.areas,jdbcType=VARCHAR},
        </if>
        <if test="item.address!=null">
          #{item.address,jdbcType=VARCHAR},
        </if>
        <if test="item.addressState!=null">
          #{item.addressState,jdbcType=TINYINT},
        </if>
        <if test="item.createTime!=null">
          #{item.createTime,jdbcType=BIGINT},
        </if>
        <if test="item.updateTime!=null">
          #{item.updateTime,jdbcType=BIGINT},
        </if>
      </trim>
    </foreach>
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
    insert into adopt_user_address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      user_address_id,user_id,
      consignee_name,consignee_phone,
      province,city,
      areas,address,
      address_state,create_time,
      update_time,
    </trim>
     values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        #{item.userAddressId,jdbcType=BIGINT},#{item.userId,jdbcType=BIGINT},
        #{item.consigneeName,jdbcType=VARCHAR},#{item.consigneePhone,jdbcType=VARCHAR},
        #{item.province,jdbcType=VARCHAR},#{item.city,jdbcType=VARCHAR},
        #{item.areas,jdbcType=VARCHAR},#{item.address,jdbcType=VARCHAR},
        #{item.addressState,jdbcType=TINYINT},#{item.createTime,jdbcType=BIGINT},
        #{item.updateTime,jdbcType=BIGINT},
      </trim>
    </foreach>
  </insert>
</mapper>