<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cdg.db.user.dao.AdoptUserMapper">
  <resultMap id="BaseResultMap" type="com.cdg.db.user.model.AdoptUser">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="head_portrait" jdbcType="VARCHAR" property="headPortrait" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="union_id" jdbcType="VARCHAR" property="unionId" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="user_state" jdbcType="TINYINT" property="userState" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, open_id, head_portrait, phone, nickname, real_name, sex, address, union_id, 
    create_time, user_state
  </sql>
  <select id="selectByExample" parameterType="com.cdg.db.user.model.AdoptUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from adopt_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="page != null">
      limit #{page.begin} , #{page.size}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from adopt_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from adopt_user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.cdg.db.user.model.AdoptUserExample">
    delete from adopt_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cdg.db.user.model.AdoptUser">
    <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into adopt_user (open_id, head_portrait, phone, 
      nickname, real_name, sex, 
      address, union_id, create_time, 
      user_state)
    values (#{openId,jdbcType=VARCHAR}, #{headPortrait,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, 
      #{address,jdbcType=VARCHAR}, #{unionId,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, 
      #{userState,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.cdg.db.user.model.AdoptUser">
    <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into adopt_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="openId != null">
        open_id,
      </if>
      <if test="headPortrait != null">
        head_portrait,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="unionId != null">
        union_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="userState != null">
        user_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="headPortrait != null">
        #{headPortrait,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="unionId != null">
        #{unionId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="userState != null">
        #{userState,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cdg.db.user.model.AdoptUserExample" resultType="java.lang.Long">
    select count(*) from adopt_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update adopt_user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.openId != null">
        open_id = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.headPortrait != null">
        head_portrait = #{record.headPortrait,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=TINYINT},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.unionId != null">
        union_id = #{record.unionId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.userState != null">
        user_state = #{record.userState,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update adopt_user
    set user_id = #{record.userId,jdbcType=BIGINT},
      open_id = #{record.openId,jdbcType=VARCHAR},
      head_portrait = #{record.headPortrait,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      real_name = #{record.realName,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=TINYINT},
      address = #{record.address,jdbcType=VARCHAR},
      union_id = #{record.unionId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      user_state = #{record.userState,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cdg.db.user.model.AdoptUser">
    update adopt_user
    <set>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="headPortrait != null">
        head_portrait = #{headPortrait,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="unionId != null">
        union_id = #{unionId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="userState != null">
        user_state = #{userState,jdbcType=TINYINT},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cdg.db.user.model.AdoptUser">
    update adopt_user
    set open_id = #{openId,jdbcType=VARCHAR},
      head_portrait = #{headPortrait,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      address = #{address,jdbcType=VARCHAR},
      union_id = #{unionId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      user_state = #{userState,jdbcType=TINYINT}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    <foreach collection="list" index="index" item="item" separator=";">
      update adopt_user
      <set>
        <if test="item.openId!=null">
          open_id=#{item.openId,jdbcType=VARCHAR},
        </if>
        <if test="item.headPortrait!=null">
          head_portrait=#{item.headPortrait,jdbcType=VARCHAR},
        </if>
        <if test="item.phone!=null">
          phone=#{item.phone,jdbcType=VARCHAR},
        </if>
        <if test="item.nickname!=null">
          nickname=#{item.nickname,jdbcType=VARCHAR},
        </if>
        <if test="item.realName!=null">
          real_name=#{item.realName,jdbcType=VARCHAR},
        </if>
        <if test="item.sex!=null">
          sex=#{item.sex,jdbcType=TINYINT},
        </if>
        <if test="item.address!=null">
          address=#{item.address,jdbcType=VARCHAR},
        </if>
        <if test="item.unionId!=null">
          union_id=#{item.unionId,jdbcType=VARCHAR},
        </if>
        <if test="item.createTime!=null">
          create_time=#{item.createTime,jdbcType=BIGINT},
        </if>
        <if test="item.userState!=null">
          user_state=#{item.userState,jdbcType=TINYINT},
        </if>
      </set>
      where 
      user_id = #{item.userId,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    <foreach collection="list" index="index" item="item" separator=";">
      insert into adopt_user
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="item.userId!=null">
          user_id,
        </if>
        <if test="item.openId!=null">
          open_id,
        </if>
        <if test="item.headPortrait!=null">
          head_portrait,
        </if>
        <if test="item.phone!=null">
          phone,
        </if>
        <if test="item.nickname!=null">
          nickname,
        </if>
        <if test="item.realName!=null">
          real_name,
        </if>
        <if test="item.sex!=null">
          sex,
        </if>
        <if test="item.address!=null">
          address,
        </if>
        <if test="item.unionId!=null">
          union_id,
        </if>
        <if test="item.createTime!=null">
          create_time,
        </if>
        <if test="item.userState!=null">
          user_state,
        </if>
      </trim>
       values 
      <trim prefix=" (" suffix=")" suffixOverrides=",">
        <if test="item.userId!=null">
          #{item.userId,jdbcType=BIGINT},
        </if>
        <if test="item.openId!=null">
          #{item.openId,jdbcType=VARCHAR},
        </if>
        <if test="item.headPortrait!=null">
          #{item.headPortrait,jdbcType=VARCHAR},
        </if>
        <if test="item.phone!=null">
          #{item.phone,jdbcType=VARCHAR},
        </if>
        <if test="item.nickname!=null">
          #{item.nickname,jdbcType=VARCHAR},
        </if>
        <if test="item.realName!=null">
          #{item.realName,jdbcType=VARCHAR},
        </if>
        <if test="item.sex!=null">
          #{item.sex,jdbcType=TINYINT},
        </if>
        <if test="item.address!=null">
          #{item.address,jdbcType=VARCHAR},
        </if>
        <if test="item.unionId!=null">
          #{item.unionId,jdbcType=VARCHAR},
        </if>
        <if test="item.createTime!=null">
          #{item.createTime,jdbcType=BIGINT},
        </if>
        <if test="item.userState!=null">
          #{item.userState,jdbcType=TINYINT},
        </if>
      </trim>
    </foreach>
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
    insert into adopt_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      user_id,open_id,
      head_portrait,phone,
      nickname,real_name,
      sex,address,
      union_id,create_time,
      user_state,
    </trim>
     values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        #{item.userId,jdbcType=BIGINT},#{item.openId,jdbcType=VARCHAR},
        #{item.headPortrait,jdbcType=VARCHAR},#{item.phone,jdbcType=VARCHAR},
        #{item.nickname,jdbcType=VARCHAR},#{item.realName,jdbcType=VARCHAR},
        #{item.sex,jdbcType=TINYINT},#{item.address,jdbcType=VARCHAR},
        #{item.unionId,jdbcType=VARCHAR},#{item.createTime,jdbcType=BIGINT},
        #{item.userState,jdbcType=TINYINT},
      </trim>
    </foreach>
  </insert>
</mapper>